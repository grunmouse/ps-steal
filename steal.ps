%набор процедур для вложенного импорта по относительным путям
%
% Нотация примеров:
% В квадратных скобках перед командой показывается верхняя часть стека операндов
% Последнее значение в списке - вершина стека
% [2, 1, 0]
% в квадратных скобках в следующей строке показана та же часть стека 
% (начиная с той же позиции, считая ото дна)
% после выполнения процедуры

% @procedure
% steal - основная процедура
% [basepath, filepath] steal
% []
% @param {string} basepath - путь, заданный относительно текущего базового пути, 
%                  который будет считаться базовым в импортируемом файле.
%                  Должен заканчиваться разделителем папок (/)
% @param {string} filepath - путь, заданный относительно basepath,
%                  по которому находится импортируемый файл.
%               basepath + filepath должны образовывать путь импортирумого
%               файла относительно текущего базового пути

% @procedure
% stealfile - сокращённый вариант, импортирует файл, не меняя базового пути.
% [filepath] stealfile
% []
% эквивалентно
% [(./), filepath] steal

% @procedure
% stealfolder - сокращённый вариант для загрузки модулей с файлом index.ps
% [folderpath] stealfolder
% []
% эквивалентно
% [folderpath, (index.ps)] steal

% @procedure
% ifnotkey - условная операция, выполняющая некоторую процедуру только если в
%                  текущем словаре нет указанного ключа
% [proc, key] ifnotkey
% [возврат из proc]
% @param {executable} proc - процедура которая будет выполнена
% @param {name} key - имя, отсутствие которого будет проверяться в currentdict
% @returned {any} - процедура сама по себе ничего не возвращает, но если proc
%                кладёт что-то в стек - это там останется

%========================================
% внутренние слова
% вводятся с префиксом steal_

%Инициализируем массив под стек путей и переменную для хранения его вершины
% @var {Array[32]<String>} steal_stack - массив, для представления стека
% @var {Int} steal_stack_top - индекс вершины стека
/steal_stack [
	(./)
	() dup 2 copy 4 copy 8 copy 16 copy
] def
/steal_stack_top 0 def

%кладёт строку в стек путей
%[строка]
/steal_push {
	%инкрементируем указатель вершины стека
	/steal_stack_top steal_stack_top 1 add def
	%в этот момент стек должен вернуться в исходное состояние
	%[строка]
	steal_stack exch steal_stack_top exch put
} def
%[]

%удаляет значение из стека путей
%[]
/steal_pop {
	%затираем значение в вершине стека
	steal_stack steal_stack_top () put
	%декрементируем вершину стека
	/steal_stack_top steal_stack_top 1 sub def
} def
%[]

%[]
/steal_top {
	steal_stack steal_stack_top get
} def
%[строка с вершины]

%Джойнит стек путей в результирующий путь
%Создаёт переменную steal_path, содержащую результирующий путь путь
%[]
/steal_join {
	/steal_path 256 string def
	%[]
	steal_path 0
	%[steal_path, позиция]
	0 1 32 {
		%[steal_path, позиция, индекс]
		steal_stack exch get
		%[steal_path, позиция, строка]
		str_append
		%[steal_path, позиция]
	} for
} def
%[steal_path, позиция]

%Дописывает в указанную строку другую строку, начиная с заданной позиции
%[строка_назначения, позиция, строка]
/str_append {
	2 index 
	%[строка_назначения, позиция, строка, строка_назначения]
	4 1 roll
	%[строка_назначения, строка_назначения, позиция, строка]
	dup length
	%[строка_назначения, строка_назначения, позиция, строка, её длина]
	2 index add
	%[строка_назначения, строка_назначения, позиция, строка, новая позиция]
	4 1 roll
	%[строка_назначения, новая позиция, строка_назначения, позиция, строка]
	putinterval
	%[строка_назначения, новая позиция]
} bind def
%[финальная строка, позиция]


%==================================
% Рабочие процедуры

%Подключить файл с указанием базового пути, относительно которого будут разрешаться ссылки в подключаемом файле
%[базовый путь, путь файла]
/steal {
	exch
	%[путь файла, базовый путь]
	steal_push
	%[путь файла]
	stealfile
	
	steal_pop
} def

%Запускает файл, разрешая его путь относительно steal_path
%[путь файла]
/stealfile {
	steal_join
	%[путь файла, steal_path, позиция]
	3 -1 roll
	%[steal_path, позиция, путь файла]
	str_append
	0 exch
	getinterval
	%[полный путь файла]

	run
} def

%Подключить папку с файлом index.ps
%[базовый путь]
/stealfolder {
	(index.ps)
	steal
} def

%выполняет процедуру proc, если в текущем словаре отсутствует ключ key
%следует использовать для защиты от повторного импорта процедур в один и тот же словарь
%[proc, key]
/ifnotkey {
	currentdict exch known not
	exch
	if
} def